------------------------------------------------------
-- SCHEMA OBJECTS
------------------------------------------------------

-- Um **schema** √© uma cole√ß√£o de estruturas l√≥gicas de objetos associados a um usu√°rio do banco de dados.
-- Cada usu√°rio em um banco Oracle possui exatamente **um schema**, com o **mesmo nome do seu username**.

------------------------------------------------------
-- PRINCIPAIS OBJETOS DE UM SCHEMA:
------------------------------------------------------

-- üìå TABELA (TABLE)
-- Estrutura base para armazenamento de dados.
-- Composta por colunas (campos) e linhas (registros).
-- Ex: employees, departments

-- üìå VIEW
-- Uma **consulta SQL armazenada** no dicion√°rio de dados.
-- Referencia uma ou mais tabelas ou views.
-- N√£o armazena dados fisicamente.
-- √ötil para restringir ou formatar dados exibidos.

-- üìå MATERIALIZED VIEW
-- Armazena fisicamente os resultados de uma consulta (diferente da view comum).
-- Pode ser atualizada periodicamente (autom√°tica ou manualmente).
-- Usada para melhorar desempenho em grandes consultas.

-- üìå SIN√îNIMO (SYNONYM)
-- Nome alternativo para um objeto de banco (tabela, view, fun√ß√£o, etc.).
-- Pode ser:
--   - Privado: v√°lido apenas dentro do schema.
--   - P√∫blico (PUBLIC SYNONYM): acess√≠vel por qualquer usu√°rio.
-- Facilita o acesso a objetos em outros schemas ou nomes longos.

-- üìå CONSTRAINT
-- Regras de integridade aplicadas √†s colunas das tabelas.
-- Tipos:
--   - NOT NULL
--   - UNIQUE
--   - PRIMARY KEY
--   - FOREIGN KEY
--   - CHECK

-- üìå √çNDICE (INDEX)
-- Objeto usado para acelerar buscas e ordenar registros.
-- Pode ser criado automaticamente (ex: por PRIMARY KEY) ou manualmente.
-- Tipos comuns:
--   - B-tree (padr√£o)
--   - Bitmap
--   - Composite (m√∫ltiplas colunas)

-- üìå SEQU√äNCIA (SEQUENCE)
-- Gera n√∫meros autom√°ticos (geralmente para chaves prim√°rias).
-- Muito usada com triggers ou inserts manuais.
-- Par√¢metros:
--   - START WITH: valor inicial
--   - INCREMENT BY: incremento entre valores
--   - NOCACHE / CACHE: desempenho
-- Exemplo:
--   CREATE SEQUENCE seq_funcionario START WITH 1 INCREMENT BY 1;

-- üìå TRIGGER
-- Bloco PL/SQL que **√© executado automaticamente** em resposta a eventos (INSERT, UPDATE, DELETE).
-- Pode ser usado para valida√ß√µes, auditoria, preenchimento autom√°tico, etc.
-- Tipos:
--   - BEFORE / AFTER
--   - ON INSERT / UPDATE / DELETE
--   - ROW / STATEMENT
-- Exemplo:
--   CREATE TRIGGER trg_insere_data BEFORE INSERT ON funcionarios
--   FOR EACH ROW BEGIN :NEW.data_cadastro := SYSDATE; END;

-- üìå DATABASE LINK (DBLINK)
-- Objeto que permite acessar dados em **outro banco Oracle remoto**.
-- Utilizado para realizar consultas ou opera√ß√µes DML entre bancos distintos.
-- Sintaxe:
--   CREATE DATABASE LINK nome_link
--   CONNECT TO usuario IDENTIFIED BY senha
--   USING 'alias_tns';
-- Ex: SELECT * FROM tabela@meulink;

-- üìå PROCEDURE
-- Bloco nomeado de c√≥digo PL/SQL que **executa a√ß√µes espec√≠ficas** (sem retorno direto).
-- Utilizada para l√≥gica de neg√≥cio, automatiza√ß√£o de tarefas etc.
-- Ex: gerar relat√≥rios, atualizar dados.

-- üìå FUN√á√ÉO (FUNCTION)
-- Semelhante √† procedure, mas **retorna um valor** (obrigatoriamente).
-- Pode ser usada em instru√ß√µes SQL, como parte de SELECTs, WHEREs, etc.

-- üìå PACKAGE
-- Conjunto agrupado de procedures, fun√ß√µes, vari√°veis e cursores.
-- Divide-se em:
--   - Specification: interface p√∫blica do pacote (declara√ß√µes).
--   - Body: implementa√ß√£o das funcionalidades.
-- Facilita organiza√ß√£o, reutiliza√ß√£o e encapsulamento de c√≥digo PL/SQL.

----------- Consultando Objectos do Schema HR - Schema Objects

-- Conectar como usu√°rio HR

DESC user_objects

SELECT   object_name, object_type, status
FROM     user_objects
ORDER BY object_type;

-- Conectar como usu√°rio SYS (DBA)

DESC DBA_OBJECTS

SELECT   owner, object_name, object_type, status
FROM     dba_objects
WHERE    owner = 'HR'
ORDER BY object_type;

-- Exemplos de consultas a Nonschema Objects pelo Dicion√°rio de Dados Oracle

SELECT *
FROM dba_tablespaces;

SELECT *
FROM   dba_users;

-- Referenciando Objetos de outro Schema (Usu√°rio)

-- Conectar como usu√°rio hr

-- Consultando a Tabela employees do schema do usu√°rio HR

SELECT *
FROM   employees;

SELECT *
FROM   hr.employees;

-- Conectar como usu√°rio sys (DBA)

-- Criar o usu√°rio ALUNO

create user aluno
identified by aluno
default tablespace users
temporary tablespace temp
quota unlimited on users;

grant create session to aluno;


-- Criar uma conex√£o no SQL Developer para o usu√°rio ALUNO para o banco XEPDB1


-- Conectar como usu√°rio aluno

-- Consultando a Tabela employees do schema do usu√°rio HR

SELECT *
FROM   hr.employees;

-- Erro ORA-00942: a tabela ou view n√£o existe

-- Conectar como usu√°rio hr ou como usu√°rio sys (DBA)

-- Passar o privil√©go SELECT no objeto hr.employees para o usu√°rio aluno

GRANT SELECT on hr.employees to aluno;

-- Conectar como usu√°rio aluno

SELECT *
FROM   hr.employees;

-- Conectar como usu√°rio sys (DBA)

-- criar um sinonimo p√∫blico employees para hr.employees

drop public synonym employees;

create public synonym employees for hr.employees;

-- Conectar como usu√°rio aluno

SELECT *
FROM   employees;


------------------------------------------------------
-- NON-SCHEMA OBJECTS
------------------------------------------------------

-- ‚ùó Diferente dos objetos de schema (como tabelas, views, procedures),
-- os **non-schema objects** n√£o pertencem a um usu√°rio espec√≠fico,
-- e sim ao ambiente global do banco de dados.

------------------------------------------------------
-- PRINCIPAIS NON-SCHEMA OBJECTS
------------------------------------------------------

-- üìå TABLESPACE
-- Estrutura l√≥gica usada para armazenar objetos de banco.
-- Est√° associada a arquivos f√≠sicos no disco.
-- Tipos comuns:
--   - SYSTEM (obrigat√≥ria)
--   - SYSAUX (auxiliar)
--   - USERS (default para usu√°rios comuns)
--   - TEMP (opera√ß√µes tempor√°rias)
--   - UNDO (armazenar dados antes de uma transa√ß√£o ser confirmada)

-- Exemplo:
--   CREATE TABLESPACE exemplo_tbs
--   DATAFILE '/caminho/exemplo_tbs01.dbf' SIZE 100M;

------------------------------------------------------

-- üìå PROFILE
-- Conjunto de regras para controle de recursos e seguran√ßa de usu√°rios.
-- Controla:
--   - Tempo m√°ximo de sess√£o (IDLE_TIME)
--   - Tentativas de login (FAILED_LOGIN_ATTEMPTS)
--   - Expira√ß√£o de senha (PASSWORD_LIFE_TIME)

-- Exemplo:
--   CREATE PROFILE perfil_restrito LIMIT
--     FAILED_LOGIN_ATTEMPTS 3
--     PASSWORD_LIFE_TIME 30;

------------------------------------------------------

-- üìå ROLE
-- Conjunto de permiss√µes que pode ser atribu√≠do a usu√°rios.
-- Facilita o gerenciamento de privil√©gios.

-- Exemplo:
--   CREATE ROLE gerente;
--   GRANT SELECT, INSERT ON vendas TO gerente;
--   GRANT gerente TO usuario1;

------------------------------------------------------

-- üìå USER
-- Conta de acesso ao banco de dados.
-- Cada usu√°rio possui um schema com o mesmo nome.
-- Pode ser configurado com profile, role, quota, etc.

-- Exemplo:
--   CREATE USER fulano IDENTIFIED BY senha
--   DEFAULT TABLESPACE users
--   TEMPORARY TABLESPACE temp
--   PROFILE default;

------------------------------------------------------

-- üìå SYSTEM PRIVILEGE
-- Permiss√µes para realizar opera√ß√µes administrativas no banco.
-- Ex: criar tabelas, views, usu√°rios, roles etc.

-- Exemplo:
--   GRANT CREATE USER, DROP USER TO admin;

------------------------------------------------------

-- üìå OBJECT PRIVILEGE
-- Permiss√µes sobre objetos espec√≠ficos (tabelas, views, procedures).
-- Ex: SELECT, INSERT, EXECUTE

-- Exemplo:
--   GRANT SELECT ON funcionarios TO usuario;

------------------------------------------------------

-- üìå RESOURCE LIMIT
-- Define os limites de uso de recursos por sess√£o (com base no PROFILE).
-- Como tempo de CPU, tempo de inatividade, conex√µes simult√¢neas etc.

-- Requer:
--   ALTER SYSTEM SET RESOURCE_LIMIT = TRUE;

------------------------------------------------------

-- üìå AUDIT
-- Mecanismo para monitorar e registrar a√ß√µes dos usu√°rios.
-- Pode auditar comandos espec√≠ficos (como DROP TABLE) ou acessos a objetos.

-- Exemplo:
--   AUDIT DELETE ON funcionarios BY ACCESS;

------------------------------------------------------

-- üìå DATABASE
-- Representa a inst√¢ncia global do Oracle, incluindo os arquivos f√≠sicos,
-- mem√≥ria, estrutura l√≥gica, par√¢metros, etc.

-- Configura√ß√µes como nome, arquivos de controle, redo logs, e etc
-- fazem parte do contexto de database.

------------------------------------------------------
-- RESUMO COMPARATIVO
------------------------------------------------------

-- SCHEMA OBJECTS: Pertencem a usu√°rios espec√≠ficos (ex: TABELAS, VIEWS, TRIGGERS)
-- NON-SCHEMA OBJECTS: Pertencem ao banco de dados como um todo (ex: TABLESPACE, ROLE, PROFILE)

